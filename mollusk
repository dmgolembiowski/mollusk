#! /usr/bin/python3
# TODO combine mollusk & mollusk-relay

import builtins
import os
import pickle
import socket
import time
import xonsh

from multiprocessing import Pool as Pool
# from multiprocessing.pool import ThreadPool as Pool
from subprocess import run

def create_socket():
    sock = socket.socket()
    sock.bind(('', 0))
    sock.listen(1)
    return sock

def listen_for_cmd(sock):
    try:
        conn, addr = sock.accept()
        cwd, cmd = pickle.loads(conn.recv(1024))
        if cmd == "exit":
            return True
        builtins.__xonsh_shell__.default(f"cd {str(cwd)} and {cmd}")
        conn.close()
    except Exception as e:
        print(e)

def run_fish(port, cwd):
    return run(f'fish',
            cwd=os.getcwd(),
            env={**os.environ, "MOLLUSK": str(port)})

def main():
    xonsh.main.premain()
    sock = create_socket()
    while True:
        proc = run_fish(sock.getsockname()[1], os.getcwd())
        rtn = proc.returncode

        # TODO case where fish was not killed by mollusk

        # prepare for upcoming command
        if listen_for_cmd(sock):
            return

if __name__ == "__main__":
    main()

